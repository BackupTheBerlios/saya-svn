Progress so far:
May 11, 2008 (rickg22):

    * Moved the Load routine from ProjectManager to VidProject
    * Removed some useless variables from ProjectManager
    * Added IsNew() function and m_Filename property to VidProject
    * Added m_Title property to VidProject
    * Created ExportSettings class, added an instance to VidProject
    * Added m_NeedsExportSettings flag to VidProject (for creating new projects from scratch
      without needing a dialog)


    * Fixed bug in File Opening
    * Implemented Closing of the project via Menu.
    * Implemented Recent file Opening
    * Closes project (with confirmation if necessary) before opening a new one
    * App deletes objects and closes projects cleanly before closing the frame
    * App asks to save modified project (yes/no/cancel) before closing, and
      doesn't close if user chooses "cancel".
    * Fixed typo: ShutdDownApp -> ShutDownApp
    * Now displays the current project's title and filename in the Title Bar
    * Title bar is refreshed depending on project's status

    * Renamed class ExportSettings to VideoSettings for handling of clips' video settings
    * Implemented methods Save, SaveAs, SaveCopy in VidProject.
    * Implemented stub for SaveToFile (used by the three above).

May 12, 2008 (rickg22):

    * Completed implementation of SaveToFile (needs testing)
    * Implemented Saving project wrappers in ProjectManager
    * Created Save, SaveAs, SaveCopy stubs in the Main Frame.
    * Made ProjectManager::m_project private; added GetProject() function instead.
    * Implemented project saving from the Main Menu
    * Tested VidProject::SaveToFile functionality.

May 13, 2008 (rickg22):

    * Fixed some shortcuts and accelerator keys in the XRC file
    * Moved the SaveProject,SaveProjectAs,SaveProjectCopy routines from Main.cpp to
      ProjectManager::Interactive*().
    * Made VidProject::SaveToXml void.
    * Created VidProject::Clear() and VidProject::Revert();
    * Implemented VidProject::ClearUndoHistory() stub.
    + Figured out how to have "unlimited" undos: Let the project Keep a double-ended queue
      (std::deque) with XML states; (use of zip compression for the states is an option).
      Limit the number of available undo states based on free memory (use a undo-states
      memory limit; when used memory exceeds that limit, delete the saved state at the
      deque's front). After any undos, if any operation is performed, wipe the states in
      front of it
    * Implemented Undo history class (vidproject/undohistory.cpp)
    * Implemented Undo / redo functions in VidProject

    * Fixed stupid vector-of-pointers bug with the Undo history.

// TODO (rick#2#): Refresh file menu depending on project's status
// TODO (rick#2#): Implement Revert function in the menu
// TODO (rick#2#): Link Undo/Redo to respective menu entries
// TODO (rick#1#): Implement Undo History Window



// TODO (rick#1#): Create windows with wxAUI and manage to save/load the layout
// TODO (rick#1#): Create dialogs
// TODO (rick#1#): Zip the XRC files
// TODO (rick#1#): Define the XML for the project
